{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// 🏠 ZUSTAND AUTH STORE - Think of this as RTK slice but simpler!\nimport { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport axios from 'axios';\n\n// 🏪 CREATE STORE (like RTK createSlice but easier!)\nexport const useAuthStore = create(persist((set, get) => ({\n  // 📊 STATE (like RTK initial state)\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  loading: false,\n  error: null,\n  // 🎮 ACTIONS (like RTK reducers but simpler - no dispatch needed!)\n\n  // 🔑 LOGIN ACTION\n  login: async credentials => {\n    set({\n      loading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post('/api/auth/login', credentials);\n      const {\n        token,\n        user\n      } = response.data.data;\n\n      // Save token to localStorage and axios\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['x-auth-token'] = token;\n\n      // Update store (like updating RTK slice)\n      set({\n        user,\n        token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response$data$;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : (_error$response$data$ = _error$response$data.error) === null || _error$response$data$ === void 0 ? void 0 : _error$response$data$.message) || 'Login failed';\n      set({\n        loading: false,\n        error: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  },\n  // 📝 REGISTER ACTION  \n  register: async userData => {\n    set({\n      loading: true,\n      error: null\n    });\n    try {\n      const response = await axios.post('/api/auth/register', userData);\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['x-auth-token'] = token;\n      set({\n        user,\n        token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data, _error$response2$data2;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : (_error$response2$data2 = _error$response2$data.error) === null || _error$response2$data2 === void 0 ? void 0 : _error$response2$data2.message) || 'Registration failed';\n      set({\n        loading: false,\n        error: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  },\n  // 📥 LOAD USER (check if token is valid)\n  loadUser: async () => {\n    const {\n      token\n    } = get();\n    if (!token) {\n      set({\n        loading: false,\n        isAuthenticated: false\n      });\n      return;\n    }\n    set({\n      loading: true\n    });\n    axios.defaults.headers.common['x-auth-token'] = token;\n    try {\n      const response = await axios.get('/api/auth/profile');\n      set({\n        user: response.data.data,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      });\n    } catch (error) {\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['x-auth-token'];\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: 'Session expired'\n      });\n    }\n  },\n  // 🚪 LOGOUT ACTION\n  logout: () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['x-auth-token'];\n    set({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      loading: false,\n      error: null\n    });\n  },\n  // 🧹 CLEAR ERROR\n  clearError: () => set({\n    error: null\n  })\n}), {\n  name: 'auth-storage',\n  partialize: state => ({\n    token: state.token\n  })\n}));\n\n// 🎯 SELECTORS (like useSelector in RTK)\nexport const useAuthUser = () => {\n  _s();\n  return useAuthStore(state => state.user);\n};\n_s(useAuthUser, \"BSK3XewfuZPixDP8tbzcobpulFc=\", false, function () {\n  return [useAuthStore];\n});\nexport const useAuthStatus = () => {\n  _s2();\n  return useAuthStore(state => ({\n    isAuthenticated: state.isAuthenticated,\n    loading: state.loading,\n    error: state.error\n  }));\n};\n_s2(useAuthStatus, \"BSK3XewfuZPixDP8tbzcobpulFc=\", false, function () {\n  return [useAuthStore];\n});\nexport const useAuthActions = () => {\n  _s3();\n  return useAuthStore(state => ({\n    login: state.login,\n    register: state.register,\n    logout: state.logout,\n    clearError: state.clearError\n  }));\n};\n\n// 🚀 AUTO-LOAD USER ON APP START\n_s3(useAuthActions, \"BSK3XewfuZPixDP8tbzcobpulFc=\", false, function () {\n  return [useAuthStore];\n});\nuseAuthStore.getState().loadUser();","map":{"version":3,"names":["create","persist","axios","useAuthStore","set","get","user","token","isAuthenticated","loading","error","login","credentials","response","post","data","localStorage","setItem","defaults","headers","common","success","_error$response","_error$response$data","_error$response$data$","errorMessage","message","register","userData","_error$response2","_error$response2$data","_error$response2$data2","loadUser","removeItem","logout","clearError","name","partialize","state","useAuthUser","_s","useAuthStatus","_s2","useAuthActions","_s3","getState"],"sources":["C:/all/React-project/FARMTOHOME/frontend/src/store/authStore.js"],"sourcesContent":["// 🏠 ZUSTAND AUTH STORE - Think of this as RTK slice but simpler!\r\nimport { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\nimport axios from 'axios';\r\n\r\n// 🏪 CREATE STORE (like RTK createSlice but easier!)\r\nexport const useAuthStore = create(\r\n  persist(\r\n    (set, get) => ({\r\n      // 📊 STATE (like RTK initial state)\r\n      user: null,\r\n      token: null,\r\n      isAuthenticated: false,\r\n      loading: false,\r\n      error: null,\r\n\r\n      // 🎮 ACTIONS (like RTK reducers but simpler - no dispatch needed!)\r\n      \r\n      // 🔑 LOGIN ACTION\r\n      login: async (credentials) => {\r\n        set({ loading: true, error: null });\r\n        \r\n        try {\r\n          const response = await axios.post('/api/auth/login', credentials);\r\n          const { token, user } = response.data.data;\r\n          \r\n          // Save token to localStorage and axios\r\n          localStorage.setItem('token', token);\r\n          axios.defaults.headers.common['x-auth-token'] = token;\r\n          \r\n          // Update store (like updating RTK slice)\r\n          set({\r\n            user,\r\n            token,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n            error: null\r\n          });\r\n          \r\n          return { success: true };\r\n        } catch (error) {\r\n          const errorMessage = error.response?.data?.error?.message || 'Login failed';\r\n          set({ loading: false, error: errorMessage });\r\n          return { success: false, error: errorMessage };\r\n        }\r\n      },\r\n\r\n      // 📝 REGISTER ACTION  \r\n      register: async (userData) => {\r\n        set({ loading: true, error: null });\r\n        \r\n        try {\r\n          const response = await axios.post('/api/auth/register', userData);\r\n          const { token, user } = response.data.data;\r\n          \r\n          localStorage.setItem('token', token);\r\n          axios.defaults.headers.common['x-auth-token'] = token;\r\n          \r\n          set({\r\n            user,\r\n            token,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n            error: null\r\n          });\r\n          \r\n          return { success: true };\r\n        } catch (error) {\r\n          const errorMessage = error.response?.data?.error?.message || 'Registration failed';\r\n          set({ loading: false, error: errorMessage });\r\n          return { success: false, error: errorMessage };\r\n        }\r\n      },\r\n\r\n      // 📥 LOAD USER (check if token is valid)\r\n      loadUser: async () => {\r\n        const { token } = get();\r\n        if (!token) {\r\n          set({ loading: false, isAuthenticated: false });\r\n          return;\r\n        }\r\n\r\n        set({ loading: true });\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n\r\n        try {\r\n          const response = await axios.get('/api/auth/profile');\r\n          set({\r\n            user: response.data.data,\r\n            isAuthenticated: true,\r\n            loading: false,\r\n            error: null\r\n          });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          delete axios.defaults.headers.common['x-auth-token'];\r\n          set({\r\n            user: null,\r\n            token: null,\r\n            isAuthenticated: false,\r\n            loading: false,\r\n            error: 'Session expired'\r\n          });\r\n        }\r\n      },\r\n\r\n      // 🚪 LOGOUT ACTION\r\n      logout: () => {\r\n        localStorage.removeItem('token');\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n        set({\r\n          user: null,\r\n          token: null,\r\n          isAuthenticated: false,\r\n          loading: false,\r\n          error: null\r\n        });\r\n      },\r\n\r\n      // 🧹 CLEAR ERROR\r\n      clearError: () => set({ error: null })\r\n    }),\r\n    {\r\n      name: 'auth-storage',\r\n      partialize: (state) => ({ token: state.token })\r\n    }\r\n  )\r\n);\r\n\r\n// 🎯 SELECTORS (like useSelector in RTK)\r\nexport const useAuthUser = () => useAuthStore(state => state.user);\r\nexport const useAuthStatus = () => useAuthStore(state => ({\r\n  isAuthenticated: state.isAuthenticated,\r\n  loading: state.loading,\r\n  error: state.error\r\n}));\r\nexport const useAuthActions = () => useAuthStore(state => ({\r\n  login: state.login,\r\n  register: state.register,\r\n  logout: state.logout,\r\n  clearError: state.clearError\r\n}));\r\n\r\n// 🚀 AUTO-LOAD USER ON APP START\r\nuseAuthStore.getState().loadUser(); "],"mappings":";;;AAAA;AACA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,YAAY,GAAGH,MAAM,CAChCC,OAAO,CACL,CAACG,GAAG,EAAEC,GAAG,MAAM;EACb;EACAC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EAEX;;EAEA;EACAC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5BR,GAAG,CAAC;MAAEK,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAEnC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,iBAAiB,EAAEF,WAAW,CAAC;MACjE,MAAM;QAAEL,KAAK;QAAED;MAAK,CAAC,GAAGO,QAAQ,CAACE,IAAI,CAACA,IAAI;;MAE1C;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,KAAK,CAAC;MACpCL,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGb,KAAK;;MAErD;MACAH,GAAG,CAAC;QACFE,IAAI;QACJC,KAAK;QACLC,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,OAAO;QAAEW,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOX,KAAK,EAAE;MAAA,IAAAY,eAAA,EAAAC,oBAAA,EAAAC,qBAAA;MACd,MAAMC,YAAY,GAAG,EAAAH,eAAA,GAAAZ,KAAK,CAACG,QAAQ,cAAAS,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,wBAAAC,qBAAA,GAApBD,oBAAA,CAAsBb,KAAK,cAAAc,qBAAA,uBAA3BA,qBAAA,CAA6BE,OAAO,KAAI,cAAc;MAC3EtB,GAAG,CAAC;QAAEK,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEe;MAAa,CAAC,CAAC;MAC5C,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEX,KAAK,EAAEe;MAAa,CAAC;IAChD;EACF,CAAC;EAED;EACAE,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5BxB,GAAG,CAAC;MAAEK,OAAO,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAEnC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,oBAAoB,EAAEc,QAAQ,CAAC;MACjE,MAAM;QAAErB,KAAK;QAAED;MAAK,CAAC,GAAGO,QAAQ,CAACE,IAAI,CAACA,IAAI;MAE1CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEV,KAAK,CAAC;MACpCL,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGb,KAAK;MAErDH,GAAG,CAAC;QACFE,IAAI;QACJC,KAAK;QACLC,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,OAAO;QAAEW,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOX,KAAK,EAAE;MAAA,IAAAmB,gBAAA,EAAAC,qBAAA,EAAAC,sBAAA;MACd,MAAMN,YAAY,GAAG,EAAAI,gBAAA,GAAAnB,KAAK,CAACG,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBd,IAAI,cAAAe,qBAAA,wBAAAC,sBAAA,GAApBD,qBAAA,CAAsBpB,KAAK,cAAAqB,sBAAA,uBAA3BA,sBAAA,CAA6BL,OAAO,KAAI,qBAAqB;MAClFtB,GAAG,CAAC;QAAEK,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAEe;MAAa,CAAC,CAAC;MAC5C,OAAO;QAAEJ,OAAO,EAAE,KAAK;QAAEX,KAAK,EAAEe;MAAa,CAAC;IAChD;EACF,CAAC;EAED;EACAO,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAM;MAAEzB;IAAM,CAAC,GAAGF,GAAG,CAAC,CAAC;IACvB,IAAI,CAACE,KAAK,EAAE;MACVH,GAAG,CAAC;QAAEK,OAAO,EAAE,KAAK;QAAED,eAAe,EAAE;MAAM,CAAC,CAAC;MAC/C;IACF;IAEAJ,GAAG,CAAC;MAAEK,OAAO,EAAE;IAAK,CAAC,CAAC;IACtBP,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAGb,KAAK;IAErD,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMX,KAAK,CAACG,GAAG,CAAC,mBAAmB,CAAC;MACrDD,GAAG,CAAC;QACFE,IAAI,EAAEO,QAAQ,CAACE,IAAI,CAACA,IAAI;QACxBP,eAAe,EAAE,IAAI;QACrBC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdM,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;MAChC,OAAO/B,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;MACpDhB,GAAG,CAAC;QACFE,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE,IAAI;QACXC,eAAe,EAAE,KAAK;QACtBC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;EACF,CAAC;EAED;EACAwB,MAAM,EAAEA,CAAA,KAAM;IACZlB,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;IAChC,OAAO/B,KAAK,CAACgB,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC;IACpDhB,GAAG,CAAC;MACFE,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACXC,eAAe,EAAE,KAAK;MACtBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC;EAED;EACAyB,UAAU,EAAEA,CAAA,KAAM/B,GAAG,CAAC;IAAEM,KAAK,EAAE;EAAK,CAAC;AACvC,CAAC,CAAC,EACF;EACE0B,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAGC,KAAK,KAAM;IAAE/B,KAAK,EAAE+B,KAAK,CAAC/B;EAAM,CAAC;AAChD,CACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMgC,WAAW,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMrC,YAAY,CAACmC,KAAK,IAAIA,KAAK,CAAChC,IAAI,CAAC;AAAA;AAACkC,EAAA,CAAtDD,WAAW;EAAA,QAASpC,YAAY;AAAA;AAC7C,OAAO,MAAMsC,aAAa,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,YAAY,CAACmC,KAAK,KAAK;IACxD9B,eAAe,EAAE8B,KAAK,CAAC9B,eAAe;IACtCC,OAAO,EAAE6B,KAAK,CAAC7B,OAAO;IACtBC,KAAK,EAAE4B,KAAK,CAAC5B;EACf,CAAC,CAAC,CAAC;AAAA;AAACgC,GAAA,CAJSD,aAAa;EAAA,QAAStC,YAAY;AAAA;AAK/C,OAAO,MAAMwC,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMzC,YAAY,CAACmC,KAAK,KAAK;IACzD3B,KAAK,EAAE2B,KAAK,CAAC3B,KAAK;IAClBgB,QAAQ,EAAEW,KAAK,CAACX,QAAQ;IACxBO,MAAM,EAAEI,KAAK,CAACJ,MAAM;IACpBC,UAAU,EAAEG,KAAK,CAACH;EACpB,CAAC,CAAC,CAAC;AAAA;;AAEH;AAAAS,GAAA,CAPaD,cAAc;EAAA,QAASxC,YAAY;AAAA;AAQhDA,YAAY,CAAC0C,QAAQ,CAAC,CAAC,CAACb,QAAQ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}