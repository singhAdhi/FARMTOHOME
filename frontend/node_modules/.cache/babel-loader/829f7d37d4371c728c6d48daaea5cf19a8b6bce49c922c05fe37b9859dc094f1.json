{"ast":null,"code":"var _jsxFileName = \"C:\\\\all\\\\React-project\\\\FARMTOHOME\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// üîí PRIVATE ROUTE COMPONENT - Uses Zustand for auth state\n// Protects routes that require authentication - redirects to login if not authenticated\n\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\n// ‚úÖ Import Zustand hooks instead of Context\nimport { useAuthStatus } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  // üéØ ZUSTAND SELECTOR - Only subscribe to auth status\n  const {\n    isAuthenticated,\n    loading\n  } = useAuthStatus();\n  console.log('üîí PrivateRoute: Checking access - authenticated:', isAuthenticated, 'loading:', loading);\n\n  // ‚è≥ LOADING STATE - Show loading while auth status is being determined\n  if (loading) {\n    console.log('‚è≥ PrivateRoute: Still loading, showing loading spinner');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uD83D\\uDD04 Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n  // üîÄ CONDITIONAL RENDERING - Based on authentication status from Zustand\n  if (isAuthenticated) {\n    console.log('‚úÖ PrivateRoute: User authenticated, rendering protected content');\n    return children; // Render the protected component\n  } else {\n    console.log('‚ùå PrivateRoute: User not authenticated, redirecting to login');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this); // Redirect to login page\n  }\n};\n_s(PrivateRoute, \"9wQO6wcYV9KK+17kG+8LNSmvpNY=\", false, function () {\n  return [useAuthStatus];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuthStatus","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","loading","console","log","className","style","display","justifyContent","alignItems","height","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/all/React-project/FARMTOHOME/frontend/src/components/PrivateRoute.js"],"sourcesContent":["// üîí PRIVATE ROUTE COMPONENT - Uses Zustand for auth state\r\n// Protects routes that require authentication - redirects to login if not authenticated\r\n\r\nimport React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n// ‚úÖ Import Zustand hooks instead of Context\r\nimport { useAuthStatus } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  // üéØ ZUSTAND SELECTOR - Only subscribe to auth status\r\n  const { isAuthenticated, loading } = useAuthStatus();\r\n  \r\n  console.log('üîí PrivateRoute: Checking access - authenticated:', isAuthenticated, 'loading:', loading);\r\n\r\n  // ‚è≥ LOADING STATE - Show loading while auth status is being determined\r\n  if (loading) {\r\n    console.log('‚è≥ PrivateRoute: Still loading, showing loading spinner');\r\n    return (\r\n      <div className=\"loading\" style={{ \r\n        display: 'flex', \r\n        justifyContent: 'center', \r\n        alignItems: 'center', \r\n        height: '50vh' \r\n      }}>\r\n        <div>üîÑ Loading...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // üîÄ CONDITIONAL RENDERING - Based on authentication status from Zustand\r\n  if (isAuthenticated) {\r\n    console.log('‚úÖ PrivateRoute: User authenticated, rendering protected content');\r\n    return children; // Render the protected component\r\n  } else {\r\n    console.log('‚ùå PrivateRoute: User not authenticated, redirecting to login');\r\n    return <Navigate to=\"/login\" replace />; // Redirect to login page\r\n  }\r\n};\r\n\r\nexport default PrivateRoute; "],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C;AACA,SAASC,aAAa,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC;EACA,MAAM;IAAEC,eAAe;IAAEC;EAAQ,CAAC,GAAGP,aAAa,CAAC,CAAC;EAEpDQ,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEH,eAAe,EAAE,UAAU,EAAEC,OAAO,CAAC;;EAEtG;EACA,IAAIA,OAAO,EAAE;IACXC,OAAO,CAACC,GAAG,CAAC,wDAAwD,CAAC;IACrE,oBACEP,OAAA;MAAKQ,SAAS,EAAC,SAAS;MAACC,KAAK,EAAE;QAC9BC,OAAO,EAAE,MAAM;QACfC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,MAAM,EAAE;MACV,CAAE;MAAAX,QAAA,eACAF,OAAA;QAAAE,QAAA,EAAK;MAAa;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAEV;;EAEA;EACA,IAAIb,eAAe,EAAE;IACnBE,OAAO,CAACC,GAAG,CAAC,iEAAiE,CAAC;IAC9E,OAAOL,QAAQ,CAAC,CAAC;EACnB,CAAC,MAAM;IACLI,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;IAC3E,oBAAOP,OAAA,CAACH,QAAQ;MAACqB,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,CAAC;EAC3C;AACF,CAAC;AAACd,EAAA,CA7BIF,YAAY;EAAA,QAEqBH,aAAa;AAAA;AAAAsB,EAAA,GAF9CnB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}