{"ast":null,"code":"var _jsxFileName = \"C:\\\\all\\\\React-project\\\\FARMTOHOME\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\n// 🔑 LOGIN PAGE - Uses Zustand for authentication\n// Handles user login and redirects to dashboard on success\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\n// ✅ Import Zustand hooks instead of Context\nimport { useAuthStatus, useAuthActions } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // 📝 LOCAL FORM STATE - Manages form input data\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [alert, setAlert] = useState(null);\n  const {\n    email,\n    password\n  } = formData;\n  const navigate = useNavigate();\n\n  // 🎯 ZUSTAND SELECTORS - Get auth state and actions\n  const {\n    isAuthenticated,\n    loading,\n    error\n  } = useAuthStatus();\n  const {\n    login,\n    clearError\n  } = useAuthActions();\n\n  // 🔄 SIDE EFFECTS - Handle navigation and error display\n  useEffect(() => {\n    console.log('🔑 Login: Auth state changed - authenticated:', isAuthenticated, 'error:', error);\n\n    // ✅ REDIRECT ON SUCCESS - If user is authenticated, go to dashboard\n    if (isAuthenticated) {\n      console.log('✅ Login: User authenticated, redirecting to dashboard');\n      navigate('/dashboard');\n    }\n\n    // ❌ SHOW ERRORS - Display any authentication errors\n    if (error) {\n      console.log('❌ Login: Showing error:', error);\n      setAlert({\n        type: 'danger',\n        message: error\n      });\n      clearError(); // Clear error from Zustand store\n    }\n  }, [error, isAuthenticated, navigate, clearError]);\n\n  // 📝 FORM HANDLERS\n  const onChange = e => {\n    console.log('📝 Login: Form field changed:', e.target.name);\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    // Clear local alert when user starts typing\n    if (alert) setAlert(null);\n  };\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log('🔑 Login: Form submitted for email:', email);\n\n    // 🔍 CLIENT-SIDE VALIDATION\n    if (email === '' || password === '') {\n      console.log('❌ Login: Validation failed - empty fields');\n      setAlert({\n        type: 'danger',\n        message: 'Please fill in all fields'\n      });\n      return;\n    }\n\n    // 🚀 CALL ZUSTAND LOGIN ACTION\n    console.log('📤 Login: Calling Zustand login action');\n    const result = await login({\n      email,\n      password\n    });\n\n    // The login function returns { success: boolean, error?: string }\n    // Success/error handling is done in useEffect above\n    if (result.success) {\n      console.log('🎉 Login: Login successful, Zustand will handle navigation');\n    } else {\n      console.log('❌ Login: Login failed, error will be shown by useEffect');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), alert && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `alert alert-${alert.type}`,\n        children: alert.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: onChange,\n          required: true,\n          className: \"form-input\",\n          placeholder: \"Enter your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: onChange,\n          required: true,\n          className: \"form-input\",\n          placeholder: \"Enter your password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        style: {\n          width: '100%'\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-link\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/register\",\n            children: \"Sign up here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"jIMJ9q3+KnSMuW552LZnq49v1D0=\", false, function () {\n  return [useNavigate, useAuthStatus, useAuthActions];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useAuthStatus","useAuthActions","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","alert","setAlert","navigate","isAuthenticated","loading","error","login","clearError","console","log","type","message","onChange","e","target","name","value","onSubmit","preventDefault","result","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","required","placeholder","style","width","to","_c","$RefreshReg$"],"sources":["C:/all/React-project/FARMTOHOME/frontend/src/pages/Login.js"],"sourcesContent":["// 🔑 LOGIN PAGE - Uses Zustand for authentication\r\n// Handles user login and redirects to dashboard on success\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// ✅ Import Zustand hooks instead of Context\r\nimport { useAuthStatus, useAuthActions } from '../context/AuthContext';\r\n\r\nconst Login = () => {\r\n  // 📝 LOCAL FORM STATE - Manages form input data\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const { email, password } = formData;\r\n  const navigate = useNavigate();\r\n\r\n  // 🎯 ZUSTAND SELECTORS - Get auth state and actions\r\n  const { isAuthenticated, loading, error } = useAuthStatus();\r\n  const { login, clearError } = useAuthActions();\r\n\r\n  // 🔄 SIDE EFFECTS - Handle navigation and error display\r\n  useEffect(() => {\r\n    console.log('🔑 Login: Auth state changed - authenticated:', isAuthenticated, 'error:', error);\r\n    \r\n    // ✅ REDIRECT ON SUCCESS - If user is authenticated, go to dashboard\r\n    if (isAuthenticated) {\r\n      console.log('✅ Login: User authenticated, redirecting to dashboard');\r\n      navigate('/dashboard');\r\n    }\r\n\r\n    // ❌ SHOW ERRORS - Display any authentication errors\r\n    if (error) {\r\n      console.log('❌ Login: Showing error:', error);\r\n      setAlert({ type: 'danger', message: error });\r\n      clearError(); // Clear error from Zustand store\r\n    }\r\n  }, [error, isAuthenticated, navigate, clearError]);\r\n\r\n  // 📝 FORM HANDLERS\r\n  const onChange = (e) => {\r\n    console.log('📝 Login: Form field changed:', e.target.name);\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    // Clear local alert when user starts typing\r\n    if (alert) setAlert(null);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('🔑 Login: Form submitted for email:', email);\r\n    \r\n    // 🔍 CLIENT-SIDE VALIDATION\r\n    if (email === '' || password === '') {\r\n      console.log('❌ Login: Validation failed - empty fields');\r\n      setAlert({ type: 'danger', message: 'Please fill in all fields' });\r\n      return;\r\n    }\r\n\r\n    // 🚀 CALL ZUSTAND LOGIN ACTION\r\n    console.log('📤 Login: Calling Zustand login action');\r\n    const result = await login({ email, password });\r\n    \r\n    // The login function returns { success: boolean, error?: string }\r\n    // Success/error handling is done in useEffect above\r\n    if (result.success) {\r\n      console.log('🎉 Login: Login successful, Zustand will handle navigation');\r\n    } else {\r\n      console.log('❌ Login: Login failed, error will be shown by useEffect');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <form onSubmit={onSubmit} className=\"auth-form\">\r\n        <h2 className=\"auth-title\">Login</h2>\r\n        \r\n        {alert && (\r\n          <div className={`alert alert-${alert.type}`}>\r\n            {alert.message}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\" className=\"form-label\">Email Address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={onChange}\r\n            required\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your email\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={onChange}\r\n            required\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your password\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\" style={{ width: '100%' }}>\r\n          Login\r\n        </button>\r\n\r\n        <div className=\"auth-link\">\r\n          <p>\r\n            Don't have an account? <Link to=\"/register\">Sign up here</Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}